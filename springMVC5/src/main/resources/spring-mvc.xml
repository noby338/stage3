<!--该配置文件为SpringMVC的配置文件，相对与spring的配置文件(applicationContext.xml)中的内容应该分割开来书写-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
">

    <!--Controller的组件扫描(用于使用@controller和RequestMapping注解)-->
    <context:component-scan base-package="priv.noby.springmvc5.controller"/>

    <!--配置内部资源试图解析器-->
    <!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--        &lt;!&ndash;controller返回时的路径书写可省略该前缀，默认为redirect:&ndash;&gt;-->
    <!--        <property name="prefix" value="/jsp/"/>-->
    <!--        &lt;!&ndash;controller返回时的路径书写可省略该后缀&ndash;&gt;-->
    <!--        <property name="suffix" value=".jsp"/>-->
    <!--    </bean>-->


    <!--配置处理器映射器，可配合@ResponseBody注解直接响应对象、集合json，而非自己手动转换为json-->
    <!--        <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--            <property name="messageConverters">-->
    <!--                <list>-->
    <!--                    &lt;!&ndash;直接响应对象&ndash;&gt;-->
    <!--                    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
    <!--                    &lt;!&ndash;设置Response响应字符编码&ndash;&gt;-->
    <!--                    <bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
    <!--                        <property name="supportedMediaTypes">-->
    <!--                            <list>-->
    <!--&lt;!&ndash;                                <value>text/html;charset=UTF-8</value>&ndash;&gt;-->
    <!--                                <value>application/json;charset=UTF-8</value>-->
    <!--                            </list>-->
    <!--                        </property>-->
    <!--                    </bean>-->
    <!--                </list>-->
    <!--            </property>-->
    <!--        </bean>-->

    <!--配置处理器映射器的第二种方式-->
    <!--mvc的注解驱动扫描-->
    <!--使用<mvc:annotation-driven>自动加载 RequestMappingHandlerMapping（处理映射器）和
    RequestMappingHandlerAdapter（处理适配器），可替代注解处理器和适配器的配置。
    使用<mvc:annotation-driven>同时默认底层就会集成jackson进行对象或集合的json格式字符串的转换。
    属性conversion-service="converterService"表示在注解扫描时引用指定的自定义的转换器(不引用可省略)-->
    <mvc:annotation-driven conversion-service="converterService"/>

    <!--开启静态资源访问权限的第一种方式：中央调度器开放该路径资源的访问权限-->
    <!--SpringMVC默认是不对静态资源开放访问权限-->
    <!--mapping表示访问该路径时，location表示对外开放的目录-->
    <!--    <mvc:resources mapping="/css/**" location="/css/"/>-->
    <!--    <mvc:resources mapping="/img/**" location="/img/"/>-->

    <!--使得静态资源可访问的第二种方式-->
    <!--无法访问的静态资源交给原始web容器访问(tomcat)-->
    <mvc:default-servlet-handler/>

    <!--声明自定义的类型转换器-->
    <!--用于将urlencoded类型的请求参数转换为对象类型-->
    <bean id="converterService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <!--DateConverter为自定义的Date类型转换器-->
                <bean class="priv.noby.springmvc5.converter.DateConverter"/>
            </list>
        </property>
    </bean>

    <!--配置文件上传解析器用于文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--上传文件总大小-->
        <property name="maxUploadSize" value="5242800"/>
        <!--上传单个文件的大小-->
        <property name="maxUploadSizePerFile" value="5242800"/>
        <!--上传文件的编码类型-->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

</beans>