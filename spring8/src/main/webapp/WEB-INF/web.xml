<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--
      应用上下文对象(Spring上下文对象)如果是通过new ClasspathXmlApplicationContext(spring配置文件)方式获取的，那么每次从
      容器中获得Bean时都要编写new ClasspathXmlApplicationContext(spring配置文件)，这样的弊端是配置文件加载多次，应用上下文对象创建多次。
      在Web项目中，可以使用ServletContextListener.监听Web应用的启动，我们可以在Web应用启动时，就加
      载Spring的配置文件，创建应用上下文对象Application Context,在将其存储到最大的域servletContext域
      中，这样就可以在任意位置从域中获得应用上下文Application Context对象了。
      上面的分析不用手动实现，Spring提供了一个监听器ContextLoaderListener就是对上述功能的封装，该监
      听器内部加载Spring配置文件，创建应用上下文对象，并存储到ServletContext域中，提供了一个客户端工
      具WebApplicationContextUtils供使用者获得应用上下文对象。
      所以我们需要做的只有两件事：
      ①在web.xml中配置ContextLoaderListener监听器（导入spring-web坐标
      ②使用WebApplicationContextUtils获得应用上下文对象ApplicationContext
    -->

    <!--全局初始化参数，用于记录Spring配置文件的路径及文件名，ContextLoaderListener类初始化时会使用该全局参数-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!-- ContextLoaderListener类为Spring servlet的整合包提供的类，该类实现了ServletContextListener监听器(web容器创建完成时执行该类的代码)，
    可在web容器创建完成的时候将contextConfigLocation配置文件加载进web容器，并通过配置文件创建Spring容器，并将ApplicationContext(Spring容器)
    存储在ServletContext上下文对象中，以便任何servlet类中都可直接通过上下文对象获取ApplicationContext，进而使用Spring获取bean-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

</web-app>